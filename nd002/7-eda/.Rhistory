library(dplyr)
#diamondsByClarity <- group_by(diamonds, )
?group_by
diamondsByClarity <- group_by(diamonds, clarity)
diamondsByClarity <- summarise(grouped_dbc, mean_price = mean(price), median_price=median(price), min_price=min(price), max_price=max(price), n=n())
grouped_dbc <- group_by(diamonds, clarity)
diamondsByClarity <- summarise(grouped_dbc, mean_price = mean(price), median_price=median(price), min_price=min(price), max_price=max(price), n=n())
diamondsByClarity
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
#chart_clarity <- ggplot(aes(x=))
diamonds_mp_by_clarity
chart_clarity <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar()
chart_clarity <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar()
chart_clarity
ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar()
ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar(stat="identity")
diamonds_mp_by_color
chart_color <- ggplot(aes(x=color, mean_price), data=diamonds_mp_by_color) +
geom_bar(stat="identity")
grid.arrange(chairt_clarity, chart_color)
grid.arrange(chart_clarity, chart_color)
chart_color <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar(stat="identity")
grid.arrange(chart_clarity, chart_color)
#grid.arrange(chart_clarity, chart_color)
chart_clarity
chart_clarity <- ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar(stat="identity")
ggplot(aes(x=clarity, y=mean_price), data=diamonds_mp_by_clarity) +
geom_bar(stat="identity")
ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar(stat="identity")
chart_color <- ggplot(aes(x=color, y=mean_price), data=diamonds_mp_by_color) +
geom_bar(stat="identity")
#grid.arrange(chart_clarity, chart_color)
chart_clarity
#grid.arrange(chart_clarity, chart_color)
chart_clarity
chart_color
grid.arrange(chart_clarity, chart_color)
ls
ls()
rm(list=ls())
pf = read.csv('D:/fb_data/pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x=gender, y=age), data=subset(pf, is.na(gender))) +
geom_boxplot()
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot()
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom=point, shape=4)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='line', shape=4)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=3)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=2)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='pointrange', shape=4, size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='line', shape=4, size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='line',size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red') +
geom_line(aes(color=gender))
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red') +
geom_line(aes(color=gender), stat= 'summary', fun.y=median)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
#stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red') +
geom_line(aes(color=gender), stat= 'summary', fun.y=median)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
#stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red') +
geom_line(aes(color=gender), stat= 'summary', fun.y=median)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red') +
#geom_line(aes(color=gender), stat= 'summary', fun.y=median)
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_boxplot() +
# let's add the mean to the box plot too
stat_summary(fun.y = mean, geom='point', shape=4, size=5, color='red')
ggplot(aes(x=gender, y=age), data=subset(pf, !is.na(gender))) +
geom_line(aes(color=gender), stat= 'summary', fun.y=median)
ggplot(aes(x=age, y=friend_count), data=subset(pf, !is.na(gender)))
ggplot(aes(x=age, y=friend_count), data=subset(pf, !is.na(gender))) +
geom_line(aes(color=gender), stat= 'summary', fun.y=median)
# I think we're grouping by age and further grouping by
library(dplyr)
grouped_data <- group_by(age,gender, data=pf)
grouped_data
grouped_data <- group_by(pf, age, gender)
grouped_data
pf.fc_by_age_gender <- summarise(grouped_data, mean_friend_count=mean(friend_count), median_friend_count = median(friend_count))
pf.fc_by_age_gender
grouped_data <- group_by(subset(pf, !is.na(gender)), age, gender)
pf.fc_by_age_gender <- summarise(grouped_data, mean_friend_count=mean(friend_count), median_friend_count = median(friend_count))
pf.fc_by_age_gender
pf.fc_by_age_gender <- summarise(grouped_data, mean_friend_count=mean(friend_count), median_friend_count = median(friend_count), n=n())
pf.fc_by_age_gender
pf.fc_by_age_gender2 <- pf %>%
group_by(age,gender) %>%
summarise(mean_friend_count=mean(friend_count), median_friend_count = median(friend_count), n=n())
pf.fc_by_age_gender2 <- pf %>%
group_by(age,gender) %>%
# summarise removes one layer of grouping when it runs
# it removes the last group. so it will remove the gender layer
summarise(mean_friend_count=mean(friend_count), median_friend_count = median(friend_count), n=n()) %>%
ungroup() %>%
arrange(age)
pf.fc_by_age_gender2
pf.fc_by_age_gender2 <- pf %>%
filter(!is.na(gender)) %>%
group_by(age,gender) %>%
# summarise removes one layer of grouping when it runs
# it removes the last group. so it will remove the gender layer
summarise(mean_friend_count=mean(friend_count), median_friend_count = median(friend_count), n=n()) %>%
ungroup() %>%
arrange(age)
pf.fc_by_age_gender2
ggplot(aes(x=age, y=median_friend_count), data = pf.fc_by_age_gender2) +
geom_line(aes(color=gender))
install.packages("tidyr")
library(tidyr)
spread(subset(pf.fc_by_age_gender2))
subset(pf.fc_by_age_gender2), select = c("gender", "age", "median_friend_count")
subset(pf.fc_by_age_gender2), select = c("gender", "age", "median_friend_count"))
subset(pf.fc_by_age_gender2, select = c("gender", "age", "median_friend_count"))
spread(
subset(pf.fc_by_age_gender2, select = c("gender", "age", "median_friend_count")),
gender,median_friend_count)
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender2,
age ~ gender,
value.var = 'median_friend_count')
pf.fc_by_age_gender.wide
pf.fc_by_age_gender.wide1 <- spread(
subset(pf.fc_by_age_gender2, select = c("gender", "age", "median_friend_count")),
gender,median_friend_count)
pf.fc_by_age_gender.wide1
pf.fc_by_age_gender.wide1
with(pf.fc_by_age_gender.wide1, ratio=female/male)
pf.fc_by_age_gender.wide1$ratio = pf.fc_by_age_gender.wide1$female/pf.fc_by_age_gender.wide1$male
pf.fc_by_age_gender.wide1
ggplot(aes(x=age, y=ratio), data = pf.fc_by_age_gender.wide1) +
geom_line()
ggplot(aes(x=age, y=ratio), data = pf.fc_by_age_gender.wide1) +
geom_line() +
geom_hline(yintercept = 1)
ggplot(aes(x=age, y=ratio), data = pf.fc_by_age_gender.wide1) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
head(pf)
pf_2 <- subset(pf, select = c("userid", "age", "tenure", "friend_count"))
pf_2
pf_2$year_joined <- (2014 - (pf_2$tenure / 365))
pf_2
pf_2$year_joined <- floor((2014 - (pf_2$tenure / 365)))
pf_2
qplot(x=year_joined, data = pf2)
qplot(x=year_joined, data = pf2_)
qplot(x=year_joined, data = pf_2)
pf_2
summary(pf_2$year_joined)
?cut
pf_2
cut(pf_2, 4)
cut(pf_2$year_joined, 4)
new_cut <- (pf_2$year_joined, 4)
new_cut <- (pf_2$year_joined, 4)
#new_cut <- (pf_2$year_joined, 4)
head(pf_2)
#new_cut <- (pf_2$year_joined, 4)
info(pf_2)
#new_cut <- (pf_2$year_joined, 4)
typeof(pf_2$year_joined)
new_cut <- cut(pf_2$year_joined, 4)
typeof(new_cut)
new_cut
breaks <- c(2009, 2011, 2012)
year_cuts <- c(2009, 2011, 2012)
new_cut <- cut(pf_2$year_joined, breaks = year_cuts)
new_cut
# this unfortunatley gives the following dates
# (2005,2007] (2007,2010] (2010,2012] (2012,2014
year_cuts <- c(2004, 2009, 2011, 2012)
new_cut <- cut(pf_2$year_joined, breaks = year_cuts)
new_cut
# this unfortunatley gives the following dates
# (2005,2007] (2007,2010] (2010,2012] (2012,2014
year_cuts <- c(2004, 2009, 2011, 2012, 2014)
new_cut <- cut(pf_2$year_joined, breaks = year_cuts)
new_cut
levels(new_cut)
pf_2$year_joined.bucket <- new_cut
pf_2
table(pf_2)
table(pf_2$year_joined.bucket)
ggplot(aes(x=year_count.bucket, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line()
pf_2 <- subset(pf, select = c("userid", "age", "tenure", "friend_count", "gender"))
pf_2$year_joined <- floor((2014 - (pf_2$tenure / 365)))
pf_2
summary(pf_2$year_joined)
new_cut <- cut(pf_2$year_joined, 4)
# this unfortunatley gives the following dates
# (2005,2007] (2007,2010] (2010,2012] (2012,2014
year_cuts <- c(2004, 2009, 2011, 2012, 2014)
new_cut <- cut(pf_2$year_joined, breaks = year_cuts)
levels(new_cut)
pf_2$year_joined.bucket <- new_cut
table(pf_2$year_joined.bucket, useNA = 'ifany')
#typeof(pf_2$year_joined)
ggplot(aes(x=year_count.bucket, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line()
ggplot(aes(x=year_joined.bucket, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line()
ggplot(aes(x=year_joined.bucket, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line(aes(color=gender))
ggplot(aes(x=year_joined.bucket, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line(aes(color=gender), stat='summary', fun.y = 'median')
ggplot(aes(x=year_joined.bucket, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line(aes(color=gender), stat='summary', fun.y = median)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(gender))) +
geom_line(aes(color=gender), stat='summary', fun.y = median)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = median)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = mean)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = median)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = median) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = mean, linetype=3)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = mean, linetype=3)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = mean)
ggplot(aes(x=age, y=friend_count), data = subset(pf_2, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat='summary', fun.y = mean) +
geom_line(stat='summary', fun.y=mean,linetype=2)
pf
pf_3 <- subset(pf,c=("tenure", "friend_count"))
pf_3 <- subset(pf,c("tenure", "friend_count"))
pf_3 <- subset(pf,select = c("tenure", "friend_count"))
pf_3 <- subset(pf,select = c("tenure", "friend_count"), tenure > 0)
pf_3
pf_3 <- subset(pf,select = c("tenure", "friend_count"), tenure == 266)
pf_3
pf_3 <- subset(pf,select = c("tenure", "friend_count"), tenure > 0)
pf_3
pf_3
pf_3$friend_rate <- pf_3$friend_count/pf_3$tenure
pf_3
pf_3 <- subset(pf,select = c("tenure", "friend_count"), tenure > 0)
pf_3
pf
pf = read.csv('D:/fb_data/pseudo_facebook.tsv', sep = '\t')
pf_3 <- subset(pf,select = c("tenure", "friend_count"), tenure > 0)
pf_3
pf = read.csv('D:/fb_data/pseudo_facebook.tsv', sep = '\t')
pf
pf_3
subset(pf3, friend_count > 0)
subset(pf_3, friend_count > 0)
subset(pf_3, friend_count > 10)
pf = read.csv('D:/fb_data/pseudo_facebook.tsv', sep = '\t')
pf_3 <- subset(pf,select = c("tenure", "friend_count"), tenure > 0)
pf_3
pf_3$friend_rate <- pf_3$friend_count / pf_3$tenure
pf_3
mean(pf_3$friend_rate)
median(pf_3$friend_rate)
max(pf_3$friend_rate)
pf_2
pf_4 <- subset(pf, select = c("age", "tenure","friendships_intiated"))
names(pf)
pf_4 <- subset(pf, select = c("age", "tenure","friendships_initiated"))
pf_4 <- subset(pf, select = c("age", "tenure","friendships_initiated", "year_joined"))
pf_4$year_joined <- floor((2014 - (pf_4$tenure / 365)))
pf_4 <- subset(pf, select = c("age", "tenure","friendships_initiated"))
pf_4$year_joined <- floor((2014 - (pf_4$tenure / 365)))
pf_4$year_joined.bucket <- cut(pf_4$year_joined, breaks = year_cuts)
pf_4
pf_4$friendships_initiated_rate <- pf_4$friendships_initiated/pf_4$tenure
pf_4 <- subset(pf, select = c("age", "tenure","friendships_initiated"), tensure > 0)
pf_4$friendships_initiated_rate <- pf_4$friendships_initiated/pf_4$tenure
ggplot(aes(x=tenure, y=friendships_initiated_rate), data = pf_4)
ggplot(aes(x=tenure, y=friendships_initiated_rate), data = pf_4) +
geom_point()
ggplot(aes(x=tenure, y=friendships_initiated_rate), data = pf_4) +
geom_line(stat='summary', fun.y='mean')
ggplot(aes(x=tenure, y=friendships_initiated_rate), data = pf_4) +
geom_line(aes(color=year_joined.bucket),stat='summary', fun.y='mean')
ggplot(aes(x=tenure, y=friendships_initiated_rate), data = pf_4) +
geom_line(aes(color=year_joined.bucket),stat='summary', fun.y='mean') +
geom_smooth()
ggplot(aes(x=tenure, y=friendships_initiated_rate), data = pf_4) +
geom_smooth(aes(color=year_joined.bucket))
yo <- read.csv('D:/RFiles/yogurt.csv')
YO
yo
str(yo)
yo$id <- factor(yo$id)
str(yo)
yo$id <- factor(yo$id)
str(yo)
qplot(x=price, data=yo)
qplot(x=price, data=yo, bins=10)
qplot(x=price, data=yo, binwidth=10)
unique(yo$price)
yo
names(yo)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
yo
qplot(x=all.purchases, data=yo)
qplot(x=all.purchases, data=yo, binwidth=10)
qplot(x=all.purchases, data=yo, binwidth=1)
qplot(x=all.purchases, data=yo, binwidth=1)
yo
ggplot(aes(x = time, y=price), data=yo) + geom_point()
ggplot(aes(x = time, y=price), data=yo) + geom_point()
yo
levels(yo$id)
#sample from the factors, let#s sample 16 ids
sample.ids <- sample(levels(yo$ids), 16)
#sample from the factors, let#s sample 16 ids
sample.ids <- sample(levels(yo$id), 16)
sample.ids
ggplot(aes(x=time, y=price), data= subset(yo, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line()
ggplot(aes(x=time, y=price), data= subset(yo, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size=all.purchases))
ggplot(aes(x=time, y=price), data= subset(yo, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size=all.purchases), pch=1)
install.packages(GGally)
install.packages('GGally')
#install.packages('GGally')
library(GGally)
theme_set(theme_minimal(20))
set.seed(1836)
pf_subset <- pf[,c(2:15)]
pf_subset
#ggplot(aes(x=))
pf
#ggplot(aes(x=))
diamonds
ggplot(aes(x=cut, y=price/carat), data=diamonds) +
facet_wrap(~cut) +
geom_point()
head(diamonds)
ggplot(aes(x=cut, y=price/carat), data=diamonds) +
facet_wrap(~clarity) +
geom_point()
ggplot(aes(x=cut, y=price/carat), data=diamonds) +
facet_wrap(~clarity) +
geom_point(aes(color=color))
ggsave("D:/RFiles/price_carat.png")
rm(list=ls())
library(ggplot2)
data(diamonds)
head(diamonds)
data=subset(diamonds, (price < quantile(diamonds$price,0.99)) && (carat < quantile(diamonds$carat, 0.99)))
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,0.99)) && (carat < quantile(diamonds$carat, 0.99))))
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,0.99)) && (carat < quantile(diamonds$carat, 0.99))))
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,0.99)) && (carat < quantile(diamonds$carat, 0.99)))) +
geom_point()
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,percentile)) && (carat < quantile(diamonds$carat, percentile)))) +
geom_point()
percentile <- 0.99
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,percentile)) && (carat < quantile(diamonds$carat, percentile)))) +
geom_point()
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,percentile)) && (carat < quantile(diamonds$carat, percentile)))) +
geom_point()
percentile <- 0.01
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,percentile)) && (carat < quantile(diamonds$carat, percentile)))) +
geom_point()
percentile <- 0.5
ggplot(aes(x=carat, y=price),
data=subset(diamonds, (price < quantile(diamonds$price,percentile)) && (carat < quantile(diamonds$carat, percentile)))) +
geom_point()
percentile <- 0.99
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point()
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point() +
xlim(0, quantile(diamonds$carat, percentile)) +
Ylim(0, quantile(diamonds$price, percentile))
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point() +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile))
percentile <- 0.99
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point(color='orange', alpha=0.05) +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile))
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point(fill='orange', alpha=0.05) +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile))
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point(fill=I('orange'), alpha=0.05) +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile))
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point(fill=I('orange'), alpha=0.05, shape=21) +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile))
stat_smooth(method = 'lm)
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point(fill=I('orange'), alpha=0.05, shape=21) +
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point(fill=I('orange'), alpha=0.05, shape=21) +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile))
ggplot(aes(x=carat, y=price),data=diamonds) +
geom_point( alpha=0.05, shape=21) +
xlim(0, quantile(diamonds$carat, percentile)) +
ylim(0, quantile(diamonds$price, percentile)) +
stat_smooth(method = 'lm')
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages("GGally")
library(GGally)
library(scales)
library(memisc)
library(GGally)
library(scales)
#library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
